plugins {
    id 'java'
}

group = 'com.totaldevservices'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springBootVersion', '3.3.0')
    set('springCloudVersion', '2023.0.2')
    set('springDependencyMgmtVersion', '1.1.5')
    set('springCloudOpenFeignVersion', '4.1.2')
    set('lombokVersion', '1.18.32')
    set('junitPlatformLauncherVersion', '1.11.0-M2')
    set('springdocVersion', '2.5.0')
    set('apacheLoggingVersion', '2.23.1')
}

configurations.all {
    resolutionStrategy {
        eachDependency {
            DependencyResolveDetails details ->
                if (details.requested.group == 'org.springframework.boot') {
                    details.useVersion "${springBootVersion}"
                }
        }
    }
}

dependencies {

    // tds-commons
//    implementation project(':tds-commons')

    implementation "org.springframework.boot:spring-boot-gradle-plugin"
    implementation "io.spring.dependency-management:io.spring.dependency-management.gradle.plugin:${springDependencyMgmtVersion}"
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${springCloudOpenFeignVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Logging
//    implementation "org.apache.logging.log4j:log4j-core:${apacheLoggingVersion}"

    // OpenApi
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

    // Testing
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junitPlatformLauncherVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}
